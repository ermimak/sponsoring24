version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_URL=${APP_URL}
    container_name: sponsoring24-app
    restart: unless-stopped
    working_dir: /var/www/html
    ports:
      - "${PORT:-80}:80"
    depends_on:
      - db
      - redis
      - mailhog
    environment:
      - APP_NAME=Sponsoring24
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_URL=${APP_URL:-https://sponsoring24.onrender.com}
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=pgsql
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - CACHE_DRIVER=${CACHE_DRIVER:-file}
      - SESSION_DRIVER=${SESSION_DRIVER:-file}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION:-sync}
      - PHP_MEMORY_LIMIT=${PHP_MEMORY_LIMIT:-512M}
      - PHP_MAX_EXECUTION_TIME=${PHP_MAX_EXECUTION_TIME:-120}
      - PHP_POST_MAX_SIZE=${PHP_POST_MAX_SIZE:-64M}
      - PHP_UPLOAD_MAX_FILESIZE=${PHP_UPLOAD_MAX_FILESIZE:-64M}
      - MAIL_MAILER=${MAIL_MAILER:-smtp}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ENCRYPTION=${MAIL_ENCRYPTION:-tls}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS:-"hello@sponsoring24.com"}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME:-Sponsoring24}
      - STRIPE_KEY=${STRIPE_KEY}
      - STRIPE_SECRET=${STRIPE_SECRET}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://127.0.0.1/health || curl -f http://127.0.0.1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    volumes:
      - ./storage/app/public:/var/www/html/storage/app/public
      - ./storage/logs:/var/www/html/storage/logs
      - ./public/build:/var/www/html/public/build
    networks:
      - sponsoring24-network

  db:
    image: postgres:15-alpine
    container_name: sponsoring24-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - sponsoring24-network

  redis:
    image: redis:alpine
    container_name: sponsoring24-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sponsoring24-network
      
  mailhog:
    image: mailhog/mailhog:latest
    container_name: sponsoring24-mailhog
    ports:
      - "${MAILHOG_PORT:-8025}:8025"
      - "1025:1025"
    networks:
      - sponsoring24-network
      
  node:
    build:
      context: .
      dockerfile: docker/node/Dockerfile
    container_name: sponsoring24-node
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - /var/www/html/node_modules
    environment:
      - NODE_ENV=development
      - VITE_APP_URL=${APP_URL}
      - HOST=0.0.0.0
    ports:
      - "${VITE_PORT:-5173}:5173"
    networks:
      - sponsoring24-network

networks:
  sponsoring24-network:
    driver: bridge

volumes:
  db-data:
  redis-data:
  node_modules: