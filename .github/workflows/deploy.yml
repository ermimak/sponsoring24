name: Deploy

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - main
      - develop

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}

    steps:
    - uses: actions/checkout@v4

    - name: Download Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: build-artifacts
        run-id: ${{ github.event.workflow_run.id }}
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Verify Downloaded Artifacts
      run: |
        echo "Verifying downloaded artifacts..."
        if [ ! -d "build-artifacts" ]; then
          echo "Error: build-artifacts directory not found"
          exit 1
        fi
        echo "Contents of build-artifacts:"
        ls -la build-artifacts
        echo "Contents of build-artifacts/build:"
        ls -la build-artifacts/build || true
        echo "Contents of build-artifacts/vendor:"
        ls -la build-artifacts/vendor || true

    - name: Prepare Deployment Files
      run: |
        echo "Preparing deployment files..."
        mkdir -p public/build
        cp -r build-artifacts/build/* public/build/
        cp -r build-artifacts/vendor vendor/

    - name: Deploy to Production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /var/www/fundoo
          echo "Pulling latest changes..."
          git pull origin main
          echo "Copying artifacts..."
          mkdir -p public/build vendor
          cp -r build-artifacts/build/* public/build/
          cp -r build-artifacts/vendor/* vendor/
          echo "Optimizing application..."
          php artisan optimize
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          echo "Restarting services..."
          sudo systemctl restart php8.3-fpm
          sudo systemctl restart nginx
          echo "Deployment completed successfully!"

    - name: Notify on Success
      if: success()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: deployments
        SLACK_COLOR: good
        SLACK_TITLE: Deployment Successful
        SLACK_MESSAGE: 'Deployment to production completed successfully!'
        SLACK_FOOTER: 'Fundoo Platform'

    - name: Notify on Failure
      if: failure()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: deployments
        SLACK_COLOR: danger
        SLACK_TITLE: Deployment Failed
        SLACK_MESSAGE: 'Deployment to production failed!'
        SLACK_FOOTER: 'Fundoo Platform'