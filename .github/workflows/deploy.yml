name: Deploy

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - main
      - develop

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}

    steps:
    - uses: actions/checkout@v4

    - name: Debug Workflow Run
      run: |
        echo "Workflow Run ID: ${{ github.event.workflow_run.id }}"
        echo "Workflow Run Conclusion: ${{ github.event.workflow_run.conclusion }}"
        echo "Workflow Run Head Branch: ${{ github.event.workflow_run.head_branch }}"

    - name: Download Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: build-artifacts
        run-id: ${{ github.event.workflow_run.id }}
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Debug Downloaded Artifacts
      run: |
        echo "Current directory: $(pwd)"
        echo "Listing all files:"
        ls -la build-artifacts
        echo "Listing build directory:"
        ls -la build-artifacts/build || true
        echo "Listing vendor directory:"
        ls -la build-artifacts/vendor || true

    - name: Verify Artifacts
      run: |
        if [ ! -d "build-artifacts/build" ]; then
          echo "Error: build directory not found"
          exit 1
        fi
        if [ ! -d "build-artifacts/vendor" ]; then
          echo "Error: vendor directory not found"
          exit 1
        fi
        echo "Artifacts verified successfully"
        mkdir -p public/build
        cp -r build-artifacts/build/* public/build/
        cp -r build-artifacts/vendor vendor/

    - name: Deploy to Production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          set -e
          cd /var/www/fundoo
          git pull origin main
          mkdir -p public/build
          cp -r build-artifacts/build/* public/build/
          cp -r build-artifacts/vendor vendor/
          php artisan optimize
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          sudo systemctl restart php8.3-fpm
          sudo systemctl restart nginx